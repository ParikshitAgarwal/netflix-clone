{"version":3,"sources":["images/netflix_logo.png","firebase.js","components/SignIn.js","requests.js","components/Banner.js","components/Navbar.js","components/Row.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SignIn","emailRef","useRef","passwordRef","className","src","netflixLogo","alt","action","htmlFor","ref","type","required","to","onClick","e","preventDefault","signInWithEmailAndPassword","current","value","then","authUser","console","log","catch","error","alert","message","createUserWithEmailAndPassword","api","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","useState","movie","setMovie","useEffect","fetch","res","json","data","result","results","Math","floor","random","length","style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","title","name","original_name","overview","substr","Navbar","show","handleShow","transitionNavBAr","window","scrollY","addEventListener","removeEventListener","signOut","Row","fetchUrl","isLargeRow","movies","setMovies","handleScroll","scrollOffset","scrollLeft","map","poster_path","id","vote_average","Home","App","user","setUser","onAuthStateChanged","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAAe,MAA0B,yC,gBCajCA,GAFcC,IAASC,cATR,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAKIP,IAASD,Q,OC0DTS,EAhEA,WACb,IAAMC,EAAWC,iBAAO,MAClBC,EAAcD,iBAAO,MA6B3B,OACE,sBAAKE,UAAU,UAAf,UACE,qBAAKC,IAAKC,EAAaF,UAAU,OAAOG,IAAI,KAE5C,qBAAKH,UAAU,oBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,yCACA,uBAAMI,OAAO,GAAGJ,UAAU,eAA1B,UAEE,uBAAOK,QAAQ,GAAf,mCACA,uBAAOC,IAAKT,EAAUU,KAAK,QAAQC,UAAQ,IAC3C,uBAAOH,QAAQ,GAAf,sBACA,uBAAOC,IAAKP,EAAaQ,KAAK,WAAWC,UAAQ,IACjD,eAAC,IAAD,CAAMC,GAAG,QAAT,UACG,IACD,wBAAQF,KAAK,SAASG,QA5BnB,SAACC,GACdA,EAAEC,iBAEFzB,EAAK0B,2BACHhB,EAASiB,QAAQC,MACjBhB,EAAYe,QAAQC,OACpBC,MAAK,SAACC,GACNC,QAAQC,IAAIF,MACXG,OAAM,SAACC,GACNC,MAAMD,EAAME,aAmBN,2BAMJ,qBAAIvB,UAAU,SAAd,UACE,sBAAMA,UAAU,YAAhB,8BACA,sBAAMA,UAAU,cAAcU,QAnDvB,SAACC,GAChBA,EAAEC,iBACFzB,EACGqC,+BACC3B,EAASiB,QAAQC,MACjBhB,EAAYe,QAAQC,OAErBC,MAAK,SAACC,GACLC,QAAQC,IAAIF,MAEbG,OAAM,SAACC,GACNC,MAAMD,EAAME,aAwCR,qCC7DNE,EACE,mCADFA,EAEA,+BAeSC,EAXG,CACdC,cAAc,GAAD,OAAKF,EAAL,sCAA2CA,EAA3C,mBACbG,sBAAsB,GAAD,OAAKH,EAAL,gCAAqCA,EAArC,sBACrBI,cAAc,GAAD,OAAKJ,EAAL,oCAAyCA,EAAzC,mBACbK,kBAAkB,GAAD,OAAKL,EAAL,mCAAwCA,EAAxC,mBACjBM,kBAAkB,GAAD,OAAKN,EAAL,mCAAwCA,EAAxC,mBACjBO,kBAAkB,GAAD,OAAKP,EAAL,mCAAwCA,EAAxC,mBACjBQ,mBAAmB,GAAD,OAAKR,EAAL,mCAAwCA,EAAxC,sBAClBS,mBAAmB,GAAD,OAAKT,EAAL,mCAAwCA,EAAxC,oBC+BPU,G,MAzCA,WAAO,IAGFC,EAAOC,EAHN,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,KAmBnB,OAZAC,qBAAU,WACRC,MAAM,GAAD,OAAIhB,EAASI,oBACfd,MAAK,SAAC2B,GAAD,OAASA,EAAIC,UAClB5B,MAAK,SAAC6B,GACL,IAAMC,EACJD,EAAKE,QACDC,KAAKC,MAAMD,KAAKE,SAAWL,EAAKE,QAAQI,OAAS,IACvDX,EAASM,QAEZ,IAEH5B,QAAQC,IAAIoB,GAEV,sBACEvC,UAAU,SACVoD,MAAO,CACLC,gBAAgB,4CAAD,cAA8Cd,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAOe,cAArD,MACfC,eAAgB,QAChBC,mBAAoB,iBALxB,UAQE,sBAAKxD,UAAU,iBAAf,UACE,oBAAIA,UAAU,eAAd,SAA+BuC,EAAMkB,OAASlB,EAAMmB,MAAQnB,EAAMoB,gBAClE,sBAAK3D,UAAU,iBAAf,UACE,wBAAQA,UAAU,gBAAlB,kBACA,wBAAQA,UAAU,gBAAlB,wBAEF,oBAAIA,UAAU,qBAAd,UA/BYoC,EA+BgC,OAACG,QAAD,IAACA,OAAD,EAACA,EAAOqB,SA/BjCvB,EA+B0C,KA9BhD,OAAND,QAAM,IAANA,OAAA,EAAAA,EAAQe,QAASd,EAAID,EAAOyB,OAAO,EAAExB,EAAE,GAAI,MAAQD,QAgC5D,qBAAKpC,UAAU,sBCKN8D,G,MAxCA,WAAO,IAAD,EACQxB,oBAAS,GADjB,mBACZyB,EADY,KACNC,EADM,KAQbC,EAAmB,WACnBC,OAAOC,QAAU,IACnBH,GAAW,GAEXA,GAAW,IAUf,OANAvB,qBAAU,WAER,OADAyB,OAAOE,iBAAiB,SAAUH,GAC3B,WACLC,OAAOG,oBAAoB,SAAUJ,MAEtC,IAED,qBAAKjE,UAAS,cAAS+D,GAAQ,aAA/B,SACE,sBAAK/D,UAAU,cAAf,UACE,qBAAKC,IAAKC,EAAaF,UAAU,WAAWG,IAAI,KAEhD,qBACEF,IAAI,yEACJD,UAAW,aACXG,IAAI,KAEN,wBACAH,UAAU,aACVU,QA9Be,WACnBvB,EAAKmF,WA2BD,2BCsBOC,G,MAxDH,SAAC,GAAoC,IAAlCd,EAAiC,EAAjCA,MAAOe,EAA0B,EAA1BA,SAA0B,KAAjBC,WACDnC,mBAAS,KADS,mBACvCoC,EADuC,KAC/BC,EAD+B,KAIxCrE,EAAMR,iBAAO,MACb8E,EAAe,SAACC,GACpBvE,EAAIQ,QAAQgE,YAAcD,GAM5BpC,qBAAU,WAMR,OALAC,MAAM8B,GACHxD,MAAK,SAAC2B,GAAD,OAASA,EAAIC,UAClB5B,MAAK,SAAC6B,GACL8B,EAAU9B,EAAKE,YAEZ,eACN,CAACyB,IAENtD,QAAQC,IAAIuD,GAKV,OACE,sBAAK1E,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,SAA2ByD,IAC3B,qBAAKzD,UAAU,cAAcM,IAAKA,EAAlC,SACGoE,EAAOK,KAAI,SAACxC,GAAD,OACRA,EAAMyC,aACF,sBAAKhF,UAAU,SAAf,UACA,qBACEA,UAAW,aAEXC,IAAG,UA1BF,wCA0BE,OAAgBsC,EAAMyC,aACzB7E,IAAKoC,EAAMmB,MAFNnB,EAAM0C,IAIb,sBAAKjF,UAAU,UAAf,UACE,oBAAIA,UAAU,OAAd,SAAsBuC,EAAMkB,OAASlB,EAAMmB,MAAQnB,EAAMoB,gBACzD,oBAAG3D,UAAU,OAAb,eAnBAoC,EAmB+BG,EAAMqB,SAnB9BvB,EAmBuC,IAlBjD,OAAND,QAAM,IAANA,OAAA,EAAAA,EAAQe,QAASd,EAAID,EAAOyB,OAAO,EAAExB,EAAE,GAAI,MAAQD,MAmB1C,qBAAIpC,UAAU,SAAd,oBAA+BuC,EAAM2C,aAArC,eApBD,IAAC9C,EAAOC,OA4BnB,wBAAQrC,UAAU,cAAcU,QAAS,kBAAMkE,GAAc,MAA7D,SAAqE,MACrE,wBAAQ5E,UAAW,SAASU,QAAS,kBAAMkE,EAAa,MAAxD,SAAgE,WC1BvDO,EArBF,WACX,OACE,sBAAKnF,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEyD,MAAM,oBACNe,SAAU9C,EAASE,sBACnB6C,YAAU,IAEZ,cAAC,EAAD,CAAKhB,MAAM,eAAee,SAAU9C,EAASC,gBAC7C,cAAC,EAAD,CAAK8B,MAAM,YAAYe,SAAU9C,EAASG,gBAC1C,cAAC,EAAD,CAAK4B,MAAM,gBAAgBe,SAAU9C,EAASI,oBAC9C,cAAC,EAAD,CAAK2B,MAAM,gBAAgBe,SAAU9C,EAASK,oBAC9C,cAAC,EAAD,CAAK0B,MAAM,gBAAgBe,SAAU9C,EAASM,oBAC9C,cAAC,EAAD,CAAKyB,MAAM,iBAAiBe,SAAU9C,EAASO,yBCYtCmD,MA5Bf,WAAgB,IAAD,EACW9C,mBAAS,IADpB,mBACN+C,EADM,KACAC,EADA,KAeb,OAZA7C,qBAAU,WACRtD,EAAKoG,oBAAmB,SAACF,GACnBA,GACFC,EAAQD,GACRnE,QAAQC,IAAIkE,IAEZC,EAAQ,SAIX,IAGD,qBAAKtF,UAAU,MAAf,SACE,cAAC,IAAD,UACIqF,EAGD,cAAC,EAAD,IAFC,cAAC,EAAD,SCbKG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1E,MAAK,YAAkD,IAA/C2E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.eb86043f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/netflix_logo.774e8c16.png\";","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC65Z1WvVOhGeT4D1LXxbYmWRXsmxED1Z8\",\r\n    authDomain: \"netflix-clone-23dc1.firebaseapp.com\",\r\n    projectId: \"netflix-clone-23dc1\",\r\n    storageBucket: \"netflix-clone-23dc1.appspot.com\",\r\n    messagingSenderId: \"579494948691\",\r\n    appId: \"1:579494948691:web:83b72c80fa6c69fec87ba6\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  \r\n  const auth = firebase.auth();\r\n\r\n  export {auth};\r\n  ","import React, { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport netflixLogo from \"../images/netflix_logo.png\";\r\n\r\nimport \"../css/sign_in.css\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst SignIn = () => {\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(\r\n        emailRef.current.value,\r\n        passwordRef.current.value\r\n      )\r\n      .then((authUser) => {\r\n        console.log(authUser);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  };\r\n\r\n  const signin = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth.signInWithEmailAndPassword(\r\n      emailRef.current.value,\r\n      passwordRef.current.value\r\n    ).then((authUser) => {\r\n      console.log(authUser)\r\n    }).catch((error) => {\r\n        alert(error.message)\r\n    })\r\n\r\n  }\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <img src={netflixLogo} className=\"logo\" alt=\"\" />\r\n\r\n      <div className=\"sign-in_container\">\r\n        <div className=\"sign-in_content\">\r\n          <h1>Sign In</h1>\r\n          <form action=\"\" className=\"sign-in_form\">\r\n            \r\n            <label htmlFor=\"\">Email or phone number</label>\r\n            <input ref={emailRef} type=\"email\" required />\r\n            <label htmlFor=\"\">password</label>\r\n            <input ref={passwordRef} type=\"password\" required />\r\n            <Link to=\"/home\">\r\n              {\" \"}\r\n              <button type=\"submit\" onClick={signin}>\r\n                Sign In\r\n              </button>\r\n            </Link>\r\n          </form>\r\n\r\n          <h4 className=\"signup\">\r\n            <span className=\"grey_text\">New to Netflix? </span>\r\n            <span className=\"signup_link\" onClick={register}>\r\n              Sign Up now\r\n            </span>\r\n          </h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","const api = {\r\n key:   \"3e04f10540e1a09b1e0052f09bd9adfb\",\r\n base:\"https://api.themoviedb.org/3\"\r\n}\r\n \r\n\r\nconst requests =  {\r\n    fetchTrending: `${api.base}/trending/all/week?api_key=${api.key}&language=en-US`,\r\n    fetchNetflixOriginals: `${api.base}/discover/tv?api_key=${api.key}&with_networks=213`,\r\n    fetchTopRated: `${api.base}/movie/top_rated?api_key=${api.key}&language=en-US`,\r\n    fetchActionMovies: `${api.base}/discover/movie?api_key=${api.key}&with_genres=28`,\r\n    fetchComedyMovies: `${api.base}/discover/movie?api_key=${api.key}&with_genres=35`,\r\n    fetchHorrorMovies: `${api.base}/discover/movie?api_key=${api.key}&with_genres=27`,\r\n    fetchRomanceMovies: `${api.base}/discover/movie?api_key=${api.key}&with_genres=10749`,\r\n    fetchDocumentaries: `${api.base}/discover/movie?api_key=${api.key}&with_genres=99`,\r\n};\r\n\r\nexport default requests\r\n","import React, { useState, useEffect } from \"react\";\r\nimport requests from \"../requests\";\r\nimport \"../css/banner.css\";\r\n\r\nconst Banner = () => {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  const truncate = (string,n) => {\r\n        return string?.length > n ? string.substr(0,n-1)+ \"...\" : string;\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(`${requests.fetchActionMovies}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const result =\r\n          data.results[\r\n              Math.floor(Math.random() * data.results.length - 1)];\r\n        setMovie(result);\r\n      });\r\n  }, []);\r\n\r\n  console.log(movie);\r\n  return (\r\n    <div\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner_content\">\r\n        <h1 className=\"banner_title\">{ movie.title || movie.name || movie.original_name}</h1>\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner_button\">Play</button>\r\n          <button className=\"banner_button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner_description\">{truncate(movie?.overview,200)}</h1>\r\n      </div>\r\n      <div className=\"fade--bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/navbar.css\";\r\nimport { auth } from \"../firebase\";\r\nimport netflixLogo from \"../images/netflix_logo.png\";\r\n\r\nconst Navbar = () => {\r\n  const [show, handleShow] = useState(false);\r\n\r\n\r\n  const handleLogout = () => {\r\n    auth.signOut();\r\n  };\r\n\r\n  const transitionNavBAr = () => {\r\n    if (window.scrollY > 100) {\r\n      handleShow(true);\r\n    } else {\r\n      handleShow(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", transitionNavBAr);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", transitionNavBAr);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && \"nav_black\"}`}>\r\n      <div className=\"nav_content\">\r\n        <img src={netflixLogo} className=\"nav_logo\" alt=\"\" />\r\n\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n          className={\"nav_avatar\"}\r\n          alt=\"\"\r\n        />\r\n        <button \r\n        className=\"logout_btn\"\r\n        onClick={handleLogout}>Logout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../css/row.css\";\r\n\r\nconst Row = ({ title, fetchUrl,isLargeRow }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  \r\n\r\n  const ref = useRef(null);\r\n  const handleScroll = (scrollOffset) => {\r\n    ref.current.scrollLeft += scrollOffset;\r\n  \r\n  };\r\n\r\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n  useEffect(() => {\r\n    fetch(fetchUrl)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setMovies(data.results);\r\n      });\r\n    return () => {};\r\n  }, [fetchUrl]);\r\n\r\nconsole.log(movies)\r\nconst truncate = (string,n) => {\r\n  return string?.length > n ? string.substr(0,n-1)+ \"...\" : string;\r\n}\r\n \r\n  return (\r\n    <div className=\"row\" >\r\n      <h2 className=\"row_title\">{title}</h2>\r\n      <div className=\"row_posters\" ref={ref}>\r\n        {movies.map((movie) => (\r\n            movie.poster_path && (\r\n                <div className=\"poster\">\r\n                <img\r\n                  className= \"row_poster\"\r\n                  key={movie.id}\r\n                  src={`${base_url}${movie.poster_path}`}\r\n                  alt={movie.name}\r\n                />\r\n                <div className=\"overlay\">\r\n                  <h3 className=\"text\">{movie.title || movie.name || movie.original_name}</h3>\r\n                  <p className=\"para\"> {truncate(movie.overview,50)}</p>\r\n                  <h5 className=\"rating\">IMDB - {movie.vote_average}/10</h5>\r\n                </div>\r\n               \r\n              </div>\r\n            )\r\n       \r\n        ))}\r\n      </div>\r\n      <button className=\"scrollRight\" onClick={() => handleScroll(-1000)}>{\"<\"}</button>\r\n      <button className= \"scroll\" onClick={() => handleScroll(1000)}>{\">\"}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","import React from \"react\";\r\nimport Banner from \"./Banner\";\r\nimport requests from \"../requests\";\r\n\r\nimport Navbar from \"./Navbar\";\r\nimport Row from \"./Row\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <Navbar />\r\n      <Banner />\r\n      <Row\r\n        title=\"NETFLIX ORIGINALS\"\r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow\r\n      />\r\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import SignIn from \"./components/SignIn\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport { useState, useEffect } from \"react\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n  const [user, setUser] = useState(\"\");\n\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setUser(user);\n        console.log(user);\n      } else {\n        setUser(\"\");\n      }\n    });\n  \n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {!user ? (\n          <SignIn />\n        ) : (\n         <Home />\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}